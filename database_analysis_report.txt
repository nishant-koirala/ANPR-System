ANPR SYSTEM - COMPLETE DATABASE ANALYSIS & ENHANCEMENT PLAN
===============================================================================
Generated: 2025-08-28 12:35:53
Analysis: Based on existing models and CSV export data

CURRENT DATABASE STRUCTURE
==========================

TABLES IDENTIFIED:
‚Ä¢ cameras - Camera information and locations
‚Ä¢ raw_logs - All plate detections from YOLO/OCR
‚Ä¢ vehicle_log - Processed entry/exit records with toggle mode
‚Ä¢ vehicles - Vehicle registry (optional)
‚Ä¢ users - User accounts for authentication
‚Ä¢ roles - User roles and permissions

TABLE: CAMERAS
--------------
COLUMNS:
  camera_id             INTEGER         NOT NULL üîë PRIMARY KEY
  camera_name           VARCHAR(100)    NOT NULL
  location              VARCHAR(255)    NULL
  is_active             INTEGER         NULL DEFAULT 1
  created_at            DATETIME        NULL DEFAULT CURRENT_TIMESTAMP

RELATIONSHIPS:
  cameras ‚Üí raw_logs (one-to-many via camera_id)

TABLE: RAW_LOGS
---------------
COLUMNS:
  raw_id                INTEGER         NOT NULL üîë PRIMARY KEY
  camera_id             INTEGER         NOT NULL (FK ‚Üí cameras.camera_id)
  frame_id              VARCHAR(50)     NOT NULL
  plate_text            VARCHAR(20)     NOT NULL
  confidence            FLOAT           NOT NULL
  captured_at           DATETIME        NOT NULL
  image_path            VARCHAR(255)    NULL
  bbox_x                FLOAT           NULL
  bbox_y                FLOAT           NULL
  bbox_width            FLOAT           NULL
  bbox_height           FLOAT           NULL
  processing_time       FLOAT           NULL

RELATIONSHIPS:
  raw_logs ‚Üí cameras (many-to-one via camera_id)
  raw_logs ‚Üí vehicle_log (one-to-many via raw_ref)

TABLE: VEHICLE_LOG
------------------
COLUMNS:
  log_id                INTEGER         NOT NULL üîë PRIMARY KEY
  plate_number          VARCHAR(20)     NOT NULL
  vehicle_id            INTEGER         NULL (FK ‚Üí vehicles.vehicle_id)
  toggle_mode           ENUM            NOT NULL (ENTRY/EXIT)
  captured_at           DATETIME        NOT NULL
  raw_ref               INTEGER         NOT NULL (FK ‚Üí raw_logs.raw_id)
  session_id            VARCHAR(50)     NULL
  duration_minutes      INTEGER         NULL
  location_info         VARCHAR(255)    NULL
  notes                 TEXT            NULL

RELATIONSHIPS:
  vehicle_log ‚Üí raw_logs (many-to-one via raw_ref)
  vehicle_log ‚Üí vehicles (many-to-one via vehicle_id)

CURRENT LIMITATIONS
===================
‚ùå No plate image storage - only text is saved
‚ùå No plate editing capability - OCR errors cannot be corrected
‚ùå No original value tracking - edits would overwrite data
‚ùå No audit trail - changes are not tracked
‚ùå Limited image storage in raw_logs (only full frame path)

ENHANCEMENT IMPLEMENTATION PLAN
===============================

PHASE 1: ADD PLATE IMAGE STORAGE
---------------------------------
Objective: Store cropped plate images alongside text for visual verification

Database Changes:
ALTER TABLE raw_logs ADD COLUMN plate_image_path VARCHAR(500);
ALTER TABLE raw_logs ADD COLUMN thumbnail_path VARCHAR(500);
ALTER TABLE raw_logs ADD COLUMN image_width INTEGER;
ALTER TABLE raw_logs ADD COLUMN image_height INTEGER;
ALTER TABLE raw_logs ADD COLUMN image_size INTEGER;

Code Changes:
- Update plate detection to save cropped plate images
- Create thumbnail generation function (150x50px)
- Update UI to display images in search results
- Add image cleanup for old records

PHASE 2: ADD PLATE EDITING CAPABILITY
--------------------------------------
Objective: Allow operators to correct OCR mistakes

Database Changes:
ALTER TABLE vehicle_log ADD COLUMN original_plate_number VARCHAR(20);
ALTER TABLE vehicle_log ADD COLUMN is_edited BOOLEAN DEFAULT 0;
ALTER TABLE vehicle_log ADD COLUMN edited_by INTEGER;
ALTER TABLE vehicle_log ADD COLUMN edited_at DATETIME;
ALTER TABLE vehicle_log ADD COLUMN edit_reason TEXT;

-- Add foreign key constraint
ALTER TABLE vehicle_log ADD FOREIGN KEY (edited_by) REFERENCES users(user_id);

Code Changes:
- Add edit button to vehicle log UI
- Create plate editing dialog with image display
- Implement role-based permission checking
- Add validation for plate number format

PHASE 3: IMPLEMENT AUDIT TRAIL
-------------------------------
Objective: Track all plate number changes for accountability

Database Changes:
CREATE TABLE plate_edit_history (
    edit_id INTEGER PRIMARY KEY AUTOINCREMENT,
    vehicle_log_id INTEGER NOT NULL,
    old_plate_number VARCHAR(20) NOT NULL,
    new_plate_number VARCHAR(20) NOT NULL,
    edited_by INTEGER NOT NULL,
    edited_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    edit_reason TEXT,
    ip_address VARCHAR(45),
    user_agent TEXT,
    FOREIGN KEY (vehicle_log_id) REFERENCES vehicle_log(log_id),
    FOREIGN KEY (edited_by) REFERENCES users(user_id)
);

CREATE INDEX idx_edit_history_log ON plate_edit_history(vehicle_log_id);
CREATE INDEX idx_edit_history_user ON plate_edit_history(edited_by);
CREATE INDEX idx_edit_history_date ON plate_edit_history(edited_at);

PHASE 4: UI ENHANCEMENTS
-------------------------
Search Page Enhancements:
- Add image thumbnail column to results table
- Implement image preview on hover/click
- Add edit button for users with permissions
- Show edit history indicator for modified records

Edit Dialog Features:
- Display original plate image
- Show current and original text side by side
- Provide reason dropdown/text field
- Add confidence indicator from OCR
- Include save/cancel with confirmation

PHASE 5: PERFORMANCE & SECURITY
--------------------------------
Performance Indexes:
CREATE INDEX idx_vehicle_log_plate ON vehicle_log(plate_number);
CREATE INDEX idx_vehicle_log_edited ON vehicle_log(is_edited);
CREATE INDEX idx_raw_logs_image ON raw_logs(plate_image_path);

Required Permissions:
- EDIT_PLATES: Can modify plate numbers
- VIEW_IMAGES: Can view plate images
- VIEW_AUDIT: Can access edit history
- MANAGE_USERS: Can assign permissions

Role Assignments:
- OPERATOR: EDIT_PLATES, VIEW_IMAGES
- SUPERVISOR: All permissions except MANAGE_USERS
- ADMIN: All permissions + user management

IMPLEMENTATION TIMELINE
========================
Week 1: Phase 1 - Image storage setup
Week 2: Phase 2 - Basic editing functionality
Week 3: Phase 3 - Audit trail implementation
Week 4: Phase 4 - UI enhancements
Week 5: Phase 5 - Performance & security
Week 6: Testing and deployment

WORKFLOW AFTER IMPLEMENTATION
==============================
1. System detects plate ‚Üí saves plate number + cropped plate image
2. Operator views log ‚Üí sees both image thumbnail and text
3. If OCR error ‚Üí operator clicks edit button
4. Edit dialog shows: original image, current text, edit field
5. Operator corrects text, adds reason, saves
6. System updates vehicle_log, creates audit entry
7. Search results show edit indicator for modified records
8. Admins can view complete audit trail

This enhancement will significantly improve the accuracy and accountability of your ANPR system.
